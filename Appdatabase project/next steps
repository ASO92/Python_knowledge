
--------------------------- COMPLETADAS ------------------------
- Un json con toda la metadata, incluida la flag de activo o no y nuestra key personal para el ticker tipo "AIR.PA.TT"
- Un csv por cada data asociada a los tickers. El csv se va a llamar según nuestra key interna
- Sin estructura de carpetas, todo plano. Debe ser la TT la que se encarge de clasificarlos según el .json
- Añadir metodo para incluir ticker_key dentro de la clase tickermanager_wiki. OK
- Añadir metodo flag activo/no activo. OK
- metodo para guardar archivo de configuración de tickers: tickers_config = metadata(fecha) + tickers_list. OK
- Cambiar formato de tickers_config, al que ha dicho Xabier. OK
- metodo UPDATE_TICKERS_CONFIG, dentro de Tickermanager(base) para comparar archivo de configuracion antiguo y nuevo, cambiando flags y reportando cambios. OK

- nueva clase data_manager(base), cuyo input es el tickers_config
    - método: descargar data asociada a un ticker. OK
    
- sublcase data_manager_Yahoo_Finance. OK
    METODOS. El número mínimo de métodos, que sean específicos, el resto van a la clase padre.
    - método download_ticker_data : descargar data asociada a un ticker. OK
    
- nuevo método en housekeeping para guardar datos en CSV.
    - Método listas a csv en nested dir. OK -> list_to_csv
    - Método dataframes a csv en nested dir. OK
    
  
- Cambiar nombre a mayusculas de los paquetes. Hecho
- Hacer método para actualizar tickers concretos y mercados concretos. Hecho.
- Cambiar los scripts en el jupyter notebook para que provengan de un único módulo .py (los que se puedan) Hecho
- Cambiar tickermanager a incluir variables de path. Hecho. Subir cambios a cloud de AppdatabaseModule y ejecutar tests y comprobar que sin errores. Hecho
- Script main para ejecutar las diferentes funcionalidades. Hecho
- Cambiar dataHousekeeper a clase herencia. No es necesario.
- Preguntar a Moji tema de PR. Hecho
- Hacer clasificador según markets de los tickers descargados (NO LOS ACTIVOS). Hecho
- Hacer lista de tikcers según markets de los tickers descargados (NO LOS ACTIVOS). Hecho
- Codigo para leer json y mostrar en pantalla subclasificación de carpetas y tickers. Consultar moji. Hecho
- Incluir a los índices una data de descarga. HEcho.
- Conectar el csv con el nombre que le toca abir. -> Era especificar la ruta correctamente, donde estaban alojados los datos. Hecho.
- PArse tickers load .py libraries. Hecho.
----------------------- POR HACER ---------------------


- AL actualizar el tickers_config con tickers nuevos, NO BORRAR EL DATA_UPDATE
- Cambiar los nombres de los tests 
- Centralizar la ruta donde se alojan los datos.
- Añadir sufijo.TT en las shares americanas.
- Metodo para cambiar tickerkeys de tickers. Pensar en producción.












